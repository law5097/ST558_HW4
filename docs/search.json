[
  {
    "objectID": "ST558_HW4.html",
    "href": "ST558_HW4.html",
    "title": "ST558_HW4 - Lee Worthington",
    "section": "",
    "text": "library(httr)\nlibrary(jsonlite)\nlibrary(magrittr)\nlibrary(purrr)\nlibrary(dplyr)"
  },
  {
    "objectID": "ST558_HW4.html#task-1-conceptual-questions",
    "href": "ST558_HW4.html#task-1-conceptual-questions",
    "title": "ST558_HW4 - Lee Worthington",
    "section": "Task 1: conceptual questions",
    "text": "Task 1: conceptual questions\n\nQuestion 1 - What is the purpose of the lapply() function? What is the equivalent purrr function?\n\nlapply() is the baseR function that applies a function to every element in a list individually. For instance, you could use lapply() to find the mean of the values in element 1, then the mean of the values in element 2, etc. The equivalent purrr function is map()\n\n\n\nQuestion 2 - code to use lapply() and cor()\n\nlapply(\n  X = my_list,\n  FUN = cor,\n  method = 'kendall'\n)\n\n\n\nQuestion 3 - what are the two advantages of using purrr functions isntead of the baseR apply family?\n\npurrr functions:\n\nHave helper functions that improve functionality/readability, such as the map_*() functions\nThere is much greater consistency between purrr functions compared to the apply family in terms of arguements, output, options, etc\n\n\n\n\nQuestion 4 - what is a side effect function?\n\nSide effect functions do not try to change/transform the data being passed to them, rather they try to produce something (side effects) from the data. Examples owuld be print()/plot() which generate output from the data without altering it\n\n\n\nQuestion 5 - why can you name a variable sd in a function and not cause any issues with the sd function?\n\nThe variable sd defined in the function only exists in the temporary environment and scope of the function, so it only exists while the function is running and therefore cannot cause any errors with the global environment."
  },
  {
    "objectID": "ST558_HW4.html#task-2-writing-r-functions",
    "href": "ST558_HW4.html#task-2-writing-r-functions",
    "title": "ST558_HW4 - Lee Worthington",
    "section": "Task 2: writing R functions",
    "text": "Task 2: writing R functions\n\nQuestion 1 - writing a function to calculate RMSE\n\n# define function\ngetRMSE <- function(observation_vector, prediction_vector, ...){\n  \n  # calculate differences in vector\n  differences <- observation_vector - prediction_vector\n  \n  # square the difference\n  squared_differences <- differences^2\n  \n  # calculate the mean of the squared diffs, with optional argument\n  avg_differences <- mean(squared_differences, ...)\n  \n  # take the root\n  rmse <- sqrt(avg_differences)\n  \n  # return rmse\n  return(rmse)\n}\n\n\n\nQuestion 2 - generate fake data and test RMSE function\n\n# set seed for reproducibility\nset.seed(10)\n\n# generate fake data\nn <- 100\nx <- runif(n)\nresp <- 3 + 10*x + rnorm(n)\npred <- predict(lm(resp ~ x), data.frame(x))\n\n# test getRMSE function on original data\nrmse_original <- getRMSE(\n  observation_vector = resp,\n  prediction_vector = pred\n)\n\n# add NAs to response data\nresp_na <- resp\nresp_na[c(3, 88)] <- NA_real_\n\n# test getRMSE function on NA induced data\nrmse_NAs_no_arguement <- getRMSE(\n  observation_vector = resp_na,\n  prediction_vector = pred\n)\n\nrmse_NAs_w_arguement <- getRMSE(\n  observation_vector = resp_na,\n  prediction_vector = pred,\n  na.rm = TRUE\n)\n\n# print results\nrmse_original\n\n[1] 0.9581677\n\nrmse_NAs_no_arguement\n\n[1] NA\n\nrmse_NAs_w_arguement\n\n[1] 0.955492\n\n\n\n\nQuestion 3 - writing a function to calculate MAE\n\n# define function\ngetMAE <- function(observation_vector, prediction_vector, ...){\n  \n  # calculate differences in vector\n  differences <- observation_vector - prediction_vector\n  \n  # get the absolute differences\n  absolute_differences <- abs(differences)\n  \n  # calculate the mean of the absolute diffs, with optional argument\n  mae <- mean(absolute_differences, ...)\n  \n  # return mae\n  return(mae)\n}\n\n\n\nQuestion 4 - generate fake data and test MAE function\n\n# set seed for reproducibility\nset.seed(10)\n\n# generate fake data\nn <- 100\nx <- runif(n)\nresp <- 3 + 10*x + rnorm(n)\npred <- predict(lm(resp ~ x), data.frame(x))\n\n# test getMAE function on original data\nmae_original <- getMAE(\n  observation_vector = resp,\n  prediction_vector = pred\n)\n\n# add NAs to response data\nresp_na <- resp\nresp_na[c(3, 88)] <- NA_real_\n\n# test getMAE function on NA induced data\nmae_NAs_no_arguement <- getMAE(\n  observation_vector = resp_na,\n  prediction_vector = pred\n)\n\nmae_NAs_w_arguement <- getMAE(\n  observation_vector = resp_na,\n  prediction_vector = pred,\n  na.rm = TRUE\n)\n\n# print results\nmae_original\n\n[1] 0.8155776\n\nmae_NAs_no_arguement\n\n[1] NA\n\nmae_NAs_w_arguement\n\n[1] 0.8109523\n\n\n\n\nQuestion 5 - create a wrapper for MAE and RMSE functions\n\n# define metrics function with default statistics\ngetMetrics <- function(observation_vector, prediction_vector, statistics = c('RMSE', 'MAE'), ...){\n  \n  # check to make sure inputs are correct type\n  if(!is.vector(observation_vector) | !is.atomic(observation_vector) | !is.numeric(observation_vector)){\n    stop('observation_vector is not an atomic numeric vector')\n  }\n  if(!is.vector(prediction_vector) | !is.atomic(prediction_vector) | !is.numeric(prediction_vector)){\n    stop('prediction_vector is not an atomic numeric vector')\n  }\n  \n  # create a list to store the statistics\n  output_statistics <- list()\n  \n  # calculate statistics conditionally\n  if('RMSE' %in% statistics){\n    output_statistics$RMSE <- getRMSE(observation_vector, prediction_vector, ...)\n  } \n  if ('MAE' %in% statistics){\n    output_statistics$MAE <- getMAE(observation_vector, prediction_vector, ...)\n  }\n  \n  # calculate everything if no valid inputs given\n  if (length(output_statistics) == 0) {\n    output_statistics$RMSE <- getRMSE(observation_vector, prediction_vector, ...)\n    output_statistics$MAE <- getMAE(observation_vector, prediction_vector, ...)\n  }\n  \n  # return metrics\n  return(output_statistics)\n}\n\n\n\nQuestion 6 - generate fake data and test wrapper\n\n# set seed for reproducibility\nset.seed(10)\n\n# generate fake data\nn <- 100\nx <- runif(n)\nresp <- 3 + 10*x + rnorm(n)\npred <- predict(lm(resp ~ x), data.frame(x))\n\n# call wrapper and generate stats\nmae <- getMetrics(\n  observation_vector = resp,\n  prediction_vector = pred,\n  statistics = 'MAE'\n)\nrmse <- getMetrics(\n  observation_vector = resp,\n  prediction_vector = pred,\n  statistics = 'RMSE'\n)\nall_statistics <- getMetrics(\n  observation_vector = resp,\n  prediction_vector = pred,\n  statistics = c('MAE', 'RMSE')\n)\n\n# add NAs to response data\nresp_na <- resp\nresp_na[c(3, 88)] <- NA_real_\n\n# call wrapper and generate stats on missing data\nmae_NAs <- getMetrics(\n  observation_vector = resp_na,\n  prediction_vector = pred,\n  statistics = 'MAE',\n  na.rm = TRUE\n)\nrmse_NAs <- getMetrics(\n  observation_vector = resp_na,\n  prediction_vector = pred,\n  statistics = 'RMSE',\n  na.rm = TRUE\n)\nall_statistics_NAs <- getMetrics(\n  observation_vector = resp_na,\n  prediction_vector = pred,\n  statistics = c('MAE', 'RMSE'),\n  na.rm = TRUE\n)\n\n# print no NA data\nmae\n\n$MAE\n[1] 0.8155776\n\nrmse\n\n$RMSE\n[1] 0.9581677\n\nall_statistics\n\n$RMSE\n[1] 0.9581677\n\n$MAE\n[1] 0.8155776\n\n# print NA data\nmae_NAs\n\n$MAE\n[1] 0.8109523\n\nrmse_NAs\n\n$RMSE\n[1] 0.955492\n\nall_statistics_NAs\n\n$RMSE\n[1] 0.955492\n\n$MAE\n[1] 0.8109523\n\n# pass incorrect data structure (should return an error)\ntry({\n  mae <- getMetrics(\n    observation_vector = as.data.frame(c('1', 'a')),\n    prediction_vector = as.data.frame(c('1', 'a')),\n    statistics = 'MAE'\n  )\n})\n\nError in getMetrics(observation_vector = as.data.frame(c(\"1\", \"a\")), prediction_vector = as.data.frame(c(\"1\",  : \n  observation_vector is not an atomic numeric vector"
  },
  {
    "objectID": "ST558_HW4.html#task-3-querying-apis",
    "href": "ST558_HW4.html#task-3-querying-apis",
    "title": "ST558_HW4 - Lee Worthington",
    "section": "Task 3: querying APIs",
    "text": "Task 3: querying APIs\n\nQuestion 1 - get API data\n\n# set api key\napi_key <- 'f07771c038d24e65aeaf85752af8bb4a'\n\n# set url for API\nurl <- 'https://newsapi.org/v2/everything?q=tesla&from=2024-05-29&sortBy=publishedAt&apiKey=f07771c038d24e65aeaf85752af8bb4a'\n\n# get the data form the API\nurl_data <- httr::GET(url)\n\n\n\nQuestion 2 - pull the article data\n\n# call url_data\narticles <- url_data |>\n  \n  # parse the url_data as text\n  httr::content(as = 'text') |>\n  \n  # convert the JSON text into a dataframe format\n  fromJSON(flatten = TRUE, simplifyDataFrame = TRUE) |>\n  \n  # pull specified element named articles, which is a list of 10 elements\n  pluck('articles') |>\n  \n  # grab the content column\n  select(content)\n\n# print results\nhead(articles$content, 5)\n\n[1] \"Conteúdo XP\\r\\nO Ibovespa, principal índice da Bolsa de Valores de São Paulo, deu sinais de uma possível reversão após atingir um fundo exato nos 119.700 pontos. Embora tenha oscilado abaixo desse pata… [+2466 chars]\"  \n[2] \"Tesla needs artificial integrity over artificial intelligence\\r\\ndpa/picture alliance via Getty Images\\r\\nThe difference between artificially intelligent-led and integrity-led machines is simple: the for… [+5907 chars]\"\n[3] \"Os carros autónomos são bons a conduzir em algumas condições, mas mais propensos a fazer asneira noutras. Temos visto casos muito complicados de veículos autónomos que simplesmente não percebem a ori… [+3855 chars]\"    \n[4] \"Nur 60 Minuten dauert der Antrittsbesuch des argentinischen Präsidenten bei Scholz. Bei den Themen Handel und Ukraine zeigen sie sich einig. Der Kanzler macht aber auch die Differenzen deutlich.\\r\\nEin… [+6638 chars]\"  \n[5] \"Electric vehicle-maker Tesla and opponents of CEO Elon Musk's $56 billion pay package clashed on Friday as they look to resolve the legal dispute over the package and billions of dollars in potential… [+3284 chars]\"    \n\n\n\n\nQuestion 3 - api function\n\n# create function\nquery_api <- function(subject, start_date, api_key){\n  \n  # set base url\n  url <- 'https://newsapi.org/v2/everything'\n  \n  # make a request to the API\n  url_data <- httr::GET(url, query = list(\n    q = subject,\n    from = start_date,\n    sortBy = 'publishedAt',\n    apiKey = api_key\n  ))\n  \n  # parse the article data\n  content <- url_data |>\n    \n    # parse the url_data as text\n    httr::content(as = 'text') |>\n    \n    # convert the JSON text into a dataframe format\n    fromJSON(flatten = TRUE, simplifyDataFrame = TRUE) |>\n    \n    # pull specified element named articles, which is a list of 10 elements\n    pluck('articles') |>\n    \n    # grab the content column\n    select(content)\n  \n  # return results\n  return(content)\n}\n\n# test function (dont forget time limit)\nhead(query_api('science', '06-06-2024', 'f07771c038d24e65aeaf85752af8bb4a')$content, 5)\n\n[1] \"RossHelen/Shutterstock\\r\\nImagine arriving at your hotel after a long flight and being greeted by your own personal sleep butler. They present you with a pillow menu and invite you to a sleep meditatio… [+4907 chars]\" \n[2] \"The Poor Poet – Carl Spitzweg (1839) Public domain, via Wikimedia Commons\\r\\nAll art comes from some abstraction of reality. What is written on the page or painted on the canvas is the artist’s represe… [+19715 chars]\"\n[3] \"Shutterstock/The Conversation\\r\\nImagine a future where your phone pings with a message that your dead father’s “digital immortal” bot is ready. This promise of chatting with a virtual version of your … [+6072 chars]\" \n[4] \"Adafruit publishes a wide range of writing and video content, including interviews and reporting on the maker market and the wider technology world. Our standards page is intended as a guide to best … [+2676 chars]\"   \n[5] \"Creature features have been a staple in the world of horror movies and television for decades. With a diverse range of monsters, creatures, and supernatural beings, these films and shows have both te… [+20057 chars]\"  \n\nhead(query_api('politics USA', '06-06-2024', 'f07771c038d24e65aeaf85752af8bb4a')$content, 5)\n\n[1] \"Skip to comments.\\r\\nCharlamagne tha God predicts Thursday debate will be 'bad' for BidenFox News ^\\r\\n | June 23, 2024\\r\\n | Hanna Panreck\\r\\nPosted on 06/23/2024 11:45:23 AM PDT by Reno89519\\r\\nCharlamagne t… [+6507 chars]\"\n[2] \"Probably the most important thing to know about [Mark] Rutte is that he is a very controlled person, FPs Caroline de Gruyter writes in her profile of the Dutch prime minister who will soon lead NATO.… [+2929 chars]\"          \n[3] \"Skip to comments.\\r\\nA New Way to Hire Great Faculty. The University of Austin means to revitalize liberal education.James G. Martin Center for Academic Renewal ^\\r\\n | June 21, 2024\\r\\n | Jacob Howland\\r\\nP… [+4590 chars]\"  \n[4] \"The attacks kept coming. \\r\\nKentucky Gov. Andy Beshear had vetoed a series of bills from GOP lawmakers to prevent transgender girls from participating in school sports and ban gender affirming health … [+8405 chars]\"        \n[5] \"In 1984, there was one company whose vision was far beyond any other. This company wanted to put a computer complete with a screen, keyboard, solid state storage, and software in the users pocket.\\r\\nD… [+35666 chars]\""
  }
]